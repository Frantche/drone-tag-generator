name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

permissions:
  contents: read    # pour checkout, tests
  packages: read    # pour actions comme docker/login-action

jobs:
  test:
    name: ðŸ§ª Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go 1.24
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Download dependencies
        run: go mod download

      - name: Run unit tests
        run: go test ./...

  release:
    name: ðŸš€ Release on main
    needs: test
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    permissions:
      contents: write   # pour crÃ©er le tag et la release
      packages: write   # pour pousser lâ€™image Docker

    steps:
      - name: Checkout full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go 1.24
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Get next version
        id: get_version
        uses: thenativeweb/get-next-version@main
        with:
          prefix: ''  # ou 'v' si vous voulez un prÃ©fixe

      - name: Set lowercase repository name
        run: |
          echo "REPO_LOWER=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build binary
        run: go build -ldflags="-s -w" -o gotags
      

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.REPO_LOWER }}:${{ steps.get_version.outputs.version }}
            ghcr.io/${{ env.REPO_LOWER }}:latest

      - name: Create and push Git tag
        env:
          VERSION: ${{ steps.get_version.outputs.version }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "$VERSION"
          git push origin "$VERSION"

      - name: Create GitHub Release & upload binary
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
          files: gotags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}